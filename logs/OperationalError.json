{"event_id":"2409eada08b14b61abe9cbe0f438e2b0","project":4506373742657536,"release":"8b84c0f02013c4ce976ba040e433a7452f463e11","dist":null,"platform":"python","message":"","datetime":"2023-12-16T03:42:40+00:00","tags":[["browser","Google Chrome 118"],["browser.name","Google Chrome"],["client_os.name","macOS"],["device","Mac"],["device.family","Mac"],["environment","production"],["handled","no"],["level","error"],["mechanism","flask"],["runtime","CPython 3.9.2"],["runtime.name","CPython"],["release","8b84c0f02013c4ce976ba040e433a7452f463e11"],["server_name","cs-1039191608401-default"],["transaction","sql"],["url","http://127.0.0.1:5000/sql"]],"_meta":{"exception":{"values":{"0":{"stacktrace":{"frames":{"1":{"vars":{"":{"len":13}}},"2":{"vars":{"":{"len":13}}}}}},"1":{"stacktrace":{"frames":{"13":{"vars":{"cparams":{"password":{"":{"rem":[["@password:filter","s",0,10]],"len":15}}}}},"14":{"vars":{"cparams":{"password":{"":{"rem":[["@password:filter","s",0,10]],"len":15}}}}},"15":{"vars":{"":{"len":40},"password":{"":{"rem":[["!config","s"]]}}}}}}},"2":{"stacktrace":{"frames":{"0":{"vars":{"environ":{"":{"len":38}}}},"21":{"vars":{"cparams":{"password":{"":{"rem":[["@password:filter","s",0,10]],"len":15}}}}},"22":{"vars":{"cparams":{"password":{"":{"rem":[["@password:filter","s",0,10]],"len":15}}}}},"23":{"vars":{"":{"len":40},"password":{"":{"rem":[["!config","s"]]}}}},"7":{"vars":{"":{"len":14}}}}}}}},"request":{"headers":{"3":{"1":{"":{"rem":[["!config","s"]]}}},"5":{"1":{"":{"rem":[["@password:filter","s",0,10]],"len":107}}}}}},"_metrics":{"bytes.ingested.event":48717,"bytes.stored.event":61550},"contexts":{"browser":{"name":"Google Chrome","version":"118","type":"browser"},"client_os":{"name":"macOS","type":"os"},"device":{"family":"Mac","model":"Mac","brand":"Apple","type":"device"},"runtime":{"name":"CPython","version":"3.9.2","build":"3.9.2 (default, Feb 28 2021, 17:03:44) \n[GCC 10.2.1 20210110]","type":"runtime"},"trace":{"trace_id":"c1e371d07d294d6f9ed03ba46adac317","span_id":"8dddbe2d365372d1","op":"http.server","status":"unknown","client_sample_rate":1.0,"sampled":true,"type":"trace"}},"culprit":"sql","environment":"production","exception":{"values":[{"type":"timeout","value":"timed out","module":"socket","stacktrace":{"frames":[{"function":"connect","module":"pymysql.connections","filename":"pymysql/connections.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/pymysql/connections.py","lineno":644,"pre_context":["                    kwargs = {}","                    if self.bind_address is not None:","                        kwargs[\"source_address\"] = (self.bind_address, 0)","                    while True:","                        try:"],"context_line":"                            sock = socket.create_connection(","post_context":["                                (self.host, self.port), self.connect_timeout, **kwargs","                            )","                            break","                        except OSError as e:","                            if e.errno == errno.EINTR:"],"in_app":false,"vars":{"exc":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","kwargs":{},"self":"<pymysql.connections.Connection object at 0x7d23341a2940>","sock":"None"}},{"function":"create_connection","module":"socket","filename":"socket.py","abs_path":"/usr/lib/python3.9/socket.py","lineno":843,"pre_context":["            if sock is not None:","                sock.close()","","    if err is not None:","        try:"],"context_line":"            raise err","post_context":["        finally:","            # Break explicitly a reference cycle","            err = None","    else:","        raise error(\"getaddrinfo returns an empty list\")"],"in_app":false,"vars":{"address":["'504project.mysql.database.azure.com'","3306"],"af":"<AddressFamily.AF_INET: 2>","err":"None","host":"'504project.mysql.database.azure.com'","port":"3306","proto":"6","res":["<AddressFamily.AF_INET: 2>","<SocketKind.SOCK_STREAM: 1>","6","''",["'20.246.239.249'","3306"]],"socktype":"<SocketKind.SOCK_STREAM: 1>","source_address":"None","timeout":"10"},"data":{"orig_in_app":-1}},{"function":"create_connection","module":"socket","filename":"socket.py","abs_path":"/usr/lib/python3.9/socket.py","lineno":831,"pre_context":["            sock = socket(af, socktype, proto)","            if timeout is not _GLOBAL_DEFAULT_TIMEOUT:","                sock.settimeout(timeout)","            if source_address:","                sock.bind(source_address)"],"context_line":"            sock.connect(sa)","post_context":["            # Break explicitly a reference cycle","            err = None","            return sock","","        except error as _:"],"in_app":false,"vars":{"address":["'504project.mysql.database.azure.com'","3306"],"af":"<AddressFamily.AF_INET: 2>","err":"None","host":"'504project.mysql.database.azure.com'","port":"3306","proto":"6","res":["<AddressFamily.AF_INET: 2>","<SocketKind.SOCK_STREAM: 1>","6","''",["'20.246.239.249'","3306"]],"socktype":"<SocketKind.SOCK_STREAM: 1>","source_address":"None","timeout":"10"},"data":{"orig_in_app":-1}}]},"mechanism":{"type":"flask","handled":false}},{"type":"OperationalError","value":"(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","module":"pymysql.err","stacktrace":{"frames":[{"function":"__init__","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":145,"pre_context":["        self.engine = engine","        self.dialect = dialect = engine.dialect","","        if connection is None:","            try:"],"context_line":"                self._dbapi_connection = engine.raw_connection()","post_context":["            except dialect.loaded_dbapi.Error as err:","                Connection._handle_dbapi_exception_noconnection(","                    err, dialect, engine","                )","                raise"],"in_app":false,"vars":{"_allow_autobegin":"True","_allow_revalidate":"True","_has_events":"None","connection":"None","dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>","engine":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)","self":"<sqlalchemy.engine.base.Connection object at 0x7d23341a2a90>"}},{"function":"raw_connection","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":3288,"pre_context":["        .. seealso::","","            :ref:`dbapi_connections`","","        \"\"\""],"context_line":"        return self.pool.connect()","post_context":["","","class OptionEngineMixin(log.Identified):","    _sa_propagate_class_events = False",""],"in_app":false,"vars":{"self":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)"}},{"function":"connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":452,"pre_context":["        The connection is instrumented such that when its","        ``close()`` method is called, the connection will be returned to","        the pool.","","        \"\"\""],"context_line":"        return _ConnectionFairy._checkout(self)","post_context":["","    def _return_conn(self, record: ConnectionPoolEntry) -> None:","        \"\"\"Given a _ConnectionRecord, return it to the :class:`_pool.Pool`.","","        This method is called when an instrumented DBAPI connection"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"_checkout","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":1267,"pre_context":["        pool: Pool,","        threadconns: Optional[threading.local] = None,","        fairy: Optional[_ConnectionFairy] = None,","    ) -> _ConnectionFairy:","        if not fairy:"],"context_line":"            fairy = _ConnectionRecord.checkout(pool)","post_context":["","            if threadconns is not None:","                threadconns.current = weakref.ref(fairy)","","        assert ("],"in_app":false,"vars":{"cls":"<class 'sqlalchemy.pool.base._ConnectionFairy'>","fairy":"None","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","threadconns":"None"}},{"function":"checkout","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":716,"pre_context":["    @classmethod","    def checkout(cls, pool: Pool) -> _ConnectionFairy:","        if TYPE_CHECKING:","            rec = cast(_ConnectionRecord, pool._do_get())","        else:"],"context_line":"            rec = pool._do_get()","post_context":["","        try:","            dbapi_connection = rec.get_connection()","        except BaseException as err:","            with util.safe_reraise():"],"in_app":false,"vars":{"cls":"<class 'sqlalchemy.pool.base._ConnectionRecord'>","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"_do_get","module":"sqlalchemy.pool.impl","filename":"sqlalchemy/pool/impl.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/impl.py","lineno":170,"pre_context":["        if self._inc_overflow():","            try:","                return self._create_connection()","            except:","                with util.safe_reraise():"],"context_line":"                    self._dec_overflow()","post_context":["                raise","        else:","            return self._do_get()","","    def _inc_overflow(self) -> bool:"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","use_overflow":"True","wait":"False"}},{"function":"__exit__","module":"sqlalchemy.util.langhelpers","filename":"sqlalchemy/util/langhelpers.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py","lineno":147,"pre_context":["        # see #2703 for notes","        if type_ is None:","            exc_type, exc_value, exc_tb = self._exc_info","            assert exc_value is not None","            self._exc_info = None  # remove potential circular references"],"context_line":"            raise exc_value.with_traceback(exc_tb)","post_context":["        else:","            self._exc_info = None  # remove potential circular references","            assert value is not None","            raise value.with_traceback(traceback)",""],"in_app":false,"vars":{"exc_tb":"<traceback object at 0x7d231ef54140>","exc_type":"<class 'pymysql.err.OperationalError'>","exc_value":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","self":"<sqlalchemy.util.langhelpers.safe_reraise object at 0x7d2335582eb0>","traceback":"None","type_":"None","value":"None"}},{"function":"_do_get","module":"sqlalchemy.pool.impl","filename":"sqlalchemy/pool/impl.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/impl.py","lineno":167,"pre_context":["                    code=\"3o7r\",","                )","","        if self._inc_overflow():","            try:"],"context_line":"                return self._create_connection()","post_context":["            except:","                with util.safe_reraise():","                    self._dec_overflow()","                raise","        else:"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","use_overflow":"True","wait":"False"}},{"function":"_create_connection","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":393,"pre_context":["                raise","","    def _create_connection(self) -> ConnectionPoolEntry:","        \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"",""],"context_line":"        return _ConnectionRecord(self)","post_context":["","    def _invalidate(","        self,","        connection: PoolProxiedConnection,","        exception: Optional[BaseException] = None,"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"__init__","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":678,"pre_context":["        self.starttime = 0","        self.dbapi_connection = None","","        self.__pool = pool","        if connect:"],"context_line":"            self.__connect()","post_context":["        self.finalize_callback = deque()","","    dbapi_connection: Optional[DBAPIConnection]","","    @property"],"in_app":false,"vars":{"connect":"True","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"__connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":903,"pre_context":["            self.dbapi_connection = connection = pool._invoke_creator(self)","            pool.logger.debug(\"Created new connection %r\", connection)","            self.fresh = True","        except BaseException as e:","            with util.safe_reraise():"],"context_line":"                pool.logger.debug(\"Error on connect(): %s\", e)","post_context":["        else:","            # in SQLAlchemy 1.4 the first_connect event is not used by","            # the engine, so this will usually not be set","            if pool.dispatch.first_connect:","                pool.dispatch.first_connect.for_modify("],"in_app":false,"vars":{"pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"__exit__","module":"sqlalchemy.util.langhelpers","filename":"sqlalchemy/util/langhelpers.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py","lineno":147,"pre_context":["        # see #2703 for notes","        if type_ is None:","            exc_type, exc_value, exc_tb = self._exc_info","            assert exc_value is not None","            self._exc_info = None  # remove potential circular references"],"context_line":"            raise exc_value.with_traceback(exc_tb)","post_context":["        else:","            self._exc_info = None  # remove potential circular references","            assert value is not None","            raise value.with_traceback(traceback)",""],"in_app":false,"vars":{"exc_tb":"<traceback object at 0x7d233538d280>","exc_type":"<class 'pymysql.err.OperationalError'>","exc_value":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","self":"<sqlalchemy.util.langhelpers.safe_reraise object at 0x7d2335582a60>","traceback":"None","type_":"None","value":"None"}},{"function":"__connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":898,"pre_context":["        # ensure any existing connection is removed, so that if","        # creator fails, this attribute stays None","        self.dbapi_connection = None","        try:","            self.starttime = time.time()"],"context_line":"            self.dbapi_connection = connection = pool._invoke_creator(self)","post_context":["            pool.logger.debug(\"Created new connection %r\", connection)","            self.fresh = True","        except BaseException as e:","            with util.safe_reraise():","                pool.logger.debug(\"Error on connect(): %s\", e)"],"in_app":false,"vars":{"pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"connect","module":"sqlalchemy.engine.create","filename":"sqlalchemy/engine/create.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/create.py","lineno":637,"pre_context":["                        fn(dialect, connection_record, cargs, cparams),","                    )","                    if connection is not None:","                        return connection",""],"context_line":"            return dialect.connect(*cargs, **cparams)","post_context":["","        creator = pop_kwarg(\"creator\", connect)","","        poolclass = pop_kwarg(\"poolclass\", None)","        if poolclass is None:"],"in_app":false,"vars":{"cargs":[],"connection_record":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>","cparams":{"client_flag":"2","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","ssl":{"fake_flag_to_enable_tls":"True"},"user":"'susan'"},"dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>"}},{"function":"connect","module":"sqlalchemy.engine.default","filename":"sqlalchemy/engine/default.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/default.py","lineno":615,"pre_context":["                % (ident, self.max_identifier_length)","            )","","    def connect(self, *cargs, **cparams):","        # inherits the docstring from interfaces.Dialect.connect"],"context_line":"        return self.loaded_dbapi.connect(*cargs, **cparams)","post_context":["","    def create_connect_args(self, url):","        # inherits the docstring from interfaces.Dialect.create_connect_args","        opts = url.translate_connect_args()","        opts.update(url.query)"],"in_app":false,"vars":{"cargs":[],"cparams":{"client_flag":"2","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","ssl":{"fake_flag_to_enable_tls":"True"},"user":"'susan'"},"self":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>"}},{"function":"__init__","module":"pymysql.connections","filename":"pymysql/connections.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/pymysql/connections.py","lineno":358,"pre_context":["            self._connect_attrs[\"program_name\"] = program_name","","        if defer_connect:","            self._sock = None","        else:"],"context_line":"            self.connect()","post_context":["","    def __enter__(self):","        return self","","    def __exit__(self, *exc_info):"],"in_app":false,"vars":{"charset":"''","collation":"None","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","port":"0","self":"<pymysql.connections.Connection object at 0x7d23341a2940>","sql_mode":"None","unix_socket":"None","user":"'susan'"}},{"function":"connect","module":"pymysql.connections","filename":"pymysql/connections.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/pymysql/connections.py","lineno":711,"pre_context":["                # Keep original exception and traceback to investigate error.","                exc.original_exception = e","                exc.traceback = traceback.format_exc()","                if DEBUG:","                    print(exc.traceback)"],"context_line":"                raise exc","post_context":["","            # If e is neither DatabaseError or IOError, It's a bug.","            # But raising AssertionError hides original error.","            # So just reraise it.","            raise"],"in_app":false,"vars":{"exc":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","kwargs":{},"self":"<pymysql.connections.Connection object at 0x7d23341a2940>","sock":"None"}}]},"mechanism":{"type":"flask","handled":false}},{"type":"OperationalError","value":"(pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)","module":"sqlalchemy.exc","stacktrace":{"frames":[{"function":"wsgi_app","module":"flask.app","filename":"flask/app.py","abs_path":"/usr/local/lib/python3.9/dist-packages/flask/app.py","lineno":1455,"pre_context":["        ctx = self.request_context(environ)","        error: BaseException | None = None","        try:","            try:","                ctx.push()"],"context_line":"                response = self.full_dispatch_request()","post_context":["            except Exception as e:","                error = e","                response = self.handle_exception(e)","            except:  # noqa: B001","                error = sys.exc_info()[1]"],"in_app":false,"vars":{"ctx":"<RequestContext 'http://127.0.0.1:5000/sql' [GET] of app>","e":"OperationalError('(pymysql.err.OperationalError) (2003, \"Can\\'t connect to MySQL server on \\'504project.mysql.database.azure.com\\' (timed out)\")')","environ":{"REQUEST_METHOD":"'GET'","SERVER_SOFTWARE":"'Werkzeug/3.0.1'","werkzeug.socket":"<socket.socket fd=5, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('127.0.0.1', 5000), raddr=('127.0.0.1', 54768)>","wsgi.errors":"<_io.TextIOWrapper name='<stderr>' mode='w' encoding='utf-8'>","wsgi.input":"<_io.BufferedReader name=5>","wsgi.multiprocess":"False","wsgi.multithread":"True","wsgi.run_once":"False","wsgi.url_scheme":"'http'","wsgi.version":["1","0"]},"error":"OperationalError('(pymysql.err.OperationalError) (2003, \"Can\\'t connect to MySQL server on \\'504project.mysql.database.azure.com\\' (timed out)\")')","self":"<Flask 'app'>","start_response":"functools.partial(<function _sentry_start_response at 0x7d23364f8940>, <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7d2335549b80>, <Transaction(name='sql', op='http.server', trace_id='c1e371d07d294d6f9ed03ba46adac317', span_id='8dddbe2d365372d1', parent_span_id=None, sampled=True, source='component')>)"}},{"function":"full_dispatch_request","module":"flask.app","filename":"flask/app.py","abs_path":"/usr/local/lib/python3.9/dist-packages/flask/app.py","lineno":869,"pre_context":["            request_started.send(self, _async_wrapper=self.ensure_sync)","            rv = self.preprocess_request()","            if rv is None:","                rv = self.dispatch_request()","        except Exception as e:"],"context_line":"            rv = self.handle_user_exception(e)","post_context":["        return self.finalize_request(rv)","","    def finalize_request(","        self,","        rv: ft.ResponseReturnValue | HTTPException,"],"in_app":false,"vars":{"rv":"None","self":"<Flask 'app'>"}},{"function":"full_dispatch_request","module":"flask.app","filename":"flask/app.py","abs_path":"/usr/local/lib/python3.9/dist-packages/flask/app.py","lineno":867,"pre_context":["","        try:","            request_started.send(self, _async_wrapper=self.ensure_sync)","            rv = self.preprocess_request()","            if rv is None:"],"context_line":"                rv = self.dispatch_request()","post_context":["        except Exception as e:","            rv = self.handle_user_exception(e)","        return self.finalize_request(rv)","","    def finalize_request("],"in_app":false,"vars":{"rv":"None","self":"<Flask 'app'>"}},{"function":"dispatch_request","module":"flask.app","filename":"flask/app.py","abs_path":"/usr/local/lib/python3.9/dist-packages/flask/app.py","lineno":852,"pre_context":["            and req.method == \"OPTIONS\"","        ):","            return self.make_default_options_response()","        # otherwise dispatch to the handler for that endpoint","        view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]"],"context_line":"        return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)","post_context":["","    def full_dispatch_request(self) -> Response:","        \"\"\"Dispatches the request and on top of that performs request","        pre and postprocessing as well as HTTP exception catching and","        error handling."],"in_app":false,"vars":{"req":"<Request 'http://127.0.0.1:5000/sql' [GET]>","rule":"<Rule '/sql' (OPTIONS, GET, HEAD) -> sql>","self":"<Flask 'app'>","view_args":{}}},{"function":"sql","module":"__main__","filename":"app.py","abs_path":"/home/susan_chen/flask_e2e_project/app/app.py","lineno":66,"pre_context":["","","@app.route('/sql')","def sql():","    # Establish a database connection"],"context_line":"    with engine.connect() as connection:","post_context":["        # Execute an SQL query to fetch data","        query = text('SELECT * FROM geo_area_id')","","        result = connection.execute(query)",""],"in_app":true,"vars":{}},{"function":"connect","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":3264,"pre_context":["","            :meth:`_engine.Engine.begin`","","        \"\"\"",""],"context_line":"        return self._connection_cls(self)","post_context":["","    def raw_connection(self) -> PoolProxiedConnection:","        \"\"\"Return a \"raw\" DBAPI connection from the connection pool.","","        The returned object is a proxied version of the DBAPI"],"in_app":false,"vars":{"self":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)"}},{"function":"__init__","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":147,"pre_context":["","        if connection is None:","            try:","                self._dbapi_connection = engine.raw_connection()","            except dialect.loaded_dbapi.Error as err:"],"context_line":"                Connection._handle_dbapi_exception_noconnection(","post_context":["                    err, dialect, engine","                )","                raise","        else:","            self._dbapi_connection = connection"],"in_app":false,"vars":{"_allow_autobegin":"True","_allow_revalidate":"True","_has_events":"None","connection":"None","dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>","engine":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)","self":"<sqlalchemy.engine.base.Connection object at 0x7d23341a2a90>"}},{"function":"_handle_dbapi_exception_noconnection","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":2426,"pre_context":["","        if newraise:","            raise newraise.with_traceback(exc_info[2]) from e","        elif should_wrap:","            assert sqlalchemy_exception is not None"],"context_line":"            raise sqlalchemy_exception.with_traceback(exc_info[2]) from e","post_context":["        else:","            assert exc_info[1] is not None","            raise exc_info[1].with_traceback(exc_info[2])","","    def _run_ddl_visitor("],"in_app":false,"vars":{"cls":"<class 'sqlalchemy.engine.base.Connection'>","dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>","e":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","engine":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)","exc_info":["<class 'pymysql.err.OperationalError'>","OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","<traceback object at 0x7d231ef54280>"],"invalidate_pool_on_disconnect":"True","is_disconnect":"False","is_pre_ping":"False","should_wrap":"True","sqlalchemy_exception":"OperationalError('(pymysql.err.OperationalError) (2003, \"Can\\'t connect to MySQL server on \\'504project.mysql.database.azure.com\\' (timed out)\")')"}},{"function":"__init__","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":145,"pre_context":["        self.engine = engine","        self.dialect = dialect = engine.dialect","","        if connection is None:","            try:"],"context_line":"                self._dbapi_connection = engine.raw_connection()","post_context":["            except dialect.loaded_dbapi.Error as err:","                Connection._handle_dbapi_exception_noconnection(","                    err, dialect, engine","                )","                raise"],"in_app":false,"vars":{"_allow_autobegin":"True","_allow_revalidate":"True","_has_events":"None","connection":"None","dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>","engine":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)","self":"<sqlalchemy.engine.base.Connection object at 0x7d23341a2a90>"}},{"function":"raw_connection","module":"sqlalchemy.engine.base","filename":"sqlalchemy/engine/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/base.py","lineno":3288,"pre_context":["        .. seealso::","","            :ref:`dbapi_connections`","","        \"\"\""],"context_line":"        return self.pool.connect()","post_context":["","","class OptionEngineMixin(log.Identified):","    _sa_propagate_class_events = False",""],"in_app":false,"vars":{"self":"Engine(mysql+pymysql://susan:***@504project.mysql.database.azure.com/susan)"}},{"function":"connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":452,"pre_context":["        The connection is instrumented such that when its","        ``close()`` method is called, the connection will be returned to","        the pool.","","        \"\"\""],"context_line":"        return _ConnectionFairy._checkout(self)","post_context":["","    def _return_conn(self, record: ConnectionPoolEntry) -> None:","        \"\"\"Given a _ConnectionRecord, return it to the :class:`_pool.Pool`.","","        This method is called when an instrumented DBAPI connection"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"_checkout","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":1267,"pre_context":["        pool: Pool,","        threadconns: Optional[threading.local] = None,","        fairy: Optional[_ConnectionFairy] = None,","    ) -> _ConnectionFairy:","        if not fairy:"],"context_line":"            fairy = _ConnectionRecord.checkout(pool)","post_context":["","            if threadconns is not None:","                threadconns.current = weakref.ref(fairy)","","        assert ("],"in_app":false,"vars":{"cls":"<class 'sqlalchemy.pool.base._ConnectionFairy'>","fairy":"None","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","threadconns":"None"}},{"function":"checkout","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":716,"pre_context":["    @classmethod","    def checkout(cls, pool: Pool) -> _ConnectionFairy:","        if TYPE_CHECKING:","            rec = cast(_ConnectionRecord, pool._do_get())","        else:"],"context_line":"            rec = pool._do_get()","post_context":["","        try:","            dbapi_connection = rec.get_connection()","        except BaseException as err:","            with util.safe_reraise():"],"in_app":false,"vars":{"cls":"<class 'sqlalchemy.pool.base._ConnectionRecord'>","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"_do_get","module":"sqlalchemy.pool.impl","filename":"sqlalchemy/pool/impl.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/impl.py","lineno":170,"pre_context":["        if self._inc_overflow():","            try:","                return self._create_connection()","            except:","                with util.safe_reraise():"],"context_line":"                    self._dec_overflow()","post_context":["                raise","        else:","            return self._do_get()","","    def _inc_overflow(self) -> bool:"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","use_overflow":"True","wait":"False"}},{"function":"__exit__","module":"sqlalchemy.util.langhelpers","filename":"sqlalchemy/util/langhelpers.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py","lineno":147,"pre_context":["        # see #2703 for notes","        if type_ is None:","            exc_type, exc_value, exc_tb = self._exc_info","            assert exc_value is not None","            self._exc_info = None  # remove potential circular references"],"context_line":"            raise exc_value.with_traceback(exc_tb)","post_context":["        else:","            self._exc_info = None  # remove potential circular references","            assert value is not None","            raise value.with_traceback(traceback)",""],"in_app":false,"vars":{"exc_tb":"<traceback object at 0x7d231ef54140>","exc_type":"<class 'pymysql.err.OperationalError'>","exc_value":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","self":"<sqlalchemy.util.langhelpers.safe_reraise object at 0x7d2335582eb0>","traceback":"None","type_":"None","value":"None"}},{"function":"_do_get","module":"sqlalchemy.pool.impl","filename":"sqlalchemy/pool/impl.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/impl.py","lineno":167,"pre_context":["                    code=\"3o7r\",","                )","","        if self._inc_overflow():","            try:"],"context_line":"                return self._create_connection()","post_context":["            except:","                with util.safe_reraise():","                    self._dec_overflow()","                raise","        else:"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","use_overflow":"True","wait":"False"}},{"function":"_create_connection","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":393,"pre_context":["                raise","","    def _create_connection(self) -> ConnectionPoolEntry:","        \"\"\"Called by subclasses to create a new ConnectionRecord.\"\"\"",""],"context_line":"        return _ConnectionRecord(self)","post_context":["","    def _invalidate(","        self,","        connection: PoolProxiedConnection,","        exception: Optional[BaseException] = None,"],"in_app":false,"vars":{"self":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>"}},{"function":"__init__","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":678,"pre_context":["        self.starttime = 0","        self.dbapi_connection = None","","        self.__pool = pool","        if connect:"],"context_line":"            self.__connect()","post_context":["        self.finalize_callback = deque()","","    dbapi_connection: Optional[DBAPIConnection]","","    @property"],"in_app":false,"vars":{"connect":"True","pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"__connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":903,"pre_context":["            self.dbapi_connection = connection = pool._invoke_creator(self)","            pool.logger.debug(\"Created new connection %r\", connection)","            self.fresh = True","        except BaseException as e:","            with util.safe_reraise():"],"context_line":"                pool.logger.debug(\"Error on connect(): %s\", e)","post_context":["        else:","            # in SQLAlchemy 1.4 the first_connect event is not used by","            # the engine, so this will usually not be set","            if pool.dispatch.first_connect:","                pool.dispatch.first_connect.for_modify("],"in_app":false,"vars":{"pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"__exit__","module":"sqlalchemy.util.langhelpers","filename":"sqlalchemy/util/langhelpers.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py","lineno":147,"pre_context":["        # see #2703 for notes","        if type_ is None:","            exc_type, exc_value, exc_tb = self._exc_info","            assert exc_value is not None","            self._exc_info = None  # remove potential circular references"],"context_line":"            raise exc_value.with_traceback(exc_tb)","post_context":["        else:","            self._exc_info = None  # remove potential circular references","            assert value is not None","            raise value.with_traceback(traceback)",""],"in_app":false,"vars":{"exc_tb":"<traceback object at 0x7d233538d280>","exc_type":"<class 'pymysql.err.OperationalError'>","exc_value":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","self":"<sqlalchemy.util.langhelpers.safe_reraise object at 0x7d2335582a60>","traceback":"None","type_":"None","value":"None"}},{"function":"__connect","module":"sqlalchemy.pool.base","filename":"sqlalchemy/pool/base.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/pool/base.py","lineno":898,"pre_context":["        # ensure any existing connection is removed, so that if","        # creator fails, this attribute stays None","        self.dbapi_connection = None","        try:","            self.starttime = time.time()"],"context_line":"            self.dbapi_connection = connection = pool._invoke_creator(self)","post_context":["            pool.logger.debug(\"Created new connection %r\", connection)","            self.fresh = True","        except BaseException as e:","            with util.safe_reraise():","                pool.logger.debug(\"Error on connect(): %s\", e)"],"in_app":false,"vars":{"pool":"<sqlalchemy.pool.impl.QueuePool object at 0x7d2335637b50>","self":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>"}},{"function":"connect","module":"sqlalchemy.engine.create","filename":"sqlalchemy/engine/create.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/create.py","lineno":637,"pre_context":["                        fn(dialect, connection_record, cargs, cparams),","                    )","                    if connection is not None:","                        return connection",""],"context_line":"            return dialect.connect(*cargs, **cparams)","post_context":["","        creator = pop_kwarg(\"creator\", connect)","","        poolclass = pop_kwarg(\"poolclass\", None)","        if poolclass is None:"],"in_app":false,"vars":{"cargs":[],"connection_record":"<sqlalchemy.pool.base._ConnectionRecord object at 0x7d23352acd00>","cparams":{"client_flag":"2","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","ssl":{"fake_flag_to_enable_tls":"True"},"user":"'susan'"},"dialect":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>"}},{"function":"connect","module":"sqlalchemy.engine.default","filename":"sqlalchemy/engine/default.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/sqlalchemy/engine/default.py","lineno":615,"pre_context":["                % (ident, self.max_identifier_length)","            )","","    def connect(self, *cargs, **cparams):","        # inherits the docstring from interfaces.Dialect.connect"],"context_line":"        return self.loaded_dbapi.connect(*cargs, **cparams)","post_context":["","    def create_connect_args(self, url):","        # inherits the docstring from interfaces.Dialect.create_connect_args","        opts = url.translate_connect_args()","        opts.update(url.query)"],"in_app":false,"vars":{"cargs":[],"cparams":{"client_flag":"2","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","ssl":{"fake_flag_to_enable_tls":"True"},"user":"'susan'"},"self":"<sqlalchemy.dialects.mysql.pymysql.MySQLDialect_pymysql object at 0x7d23356fd970>"}},{"function":"__init__","module":"pymysql.connections","filename":"pymysql/connections.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/pymysql/connections.py","lineno":358,"pre_context":["            self._connect_attrs[\"program_name\"] = program_name","","        if defer_connect:","            self._sock = None","        else:"],"context_line":"            self.connect()","post_context":["","    def __enter__(self):","        return self","","    def __exit__(self, *exc_info):"],"in_app":false,"vars":{"charset":"''","collation":"None","database":"'susan'","host":"'504project.mysql.database.azure.com'","password":"[Filtered]","port":"0","self":"<pymysql.connections.Connection object at 0x7d23341a2940>","sql_mode":"None","unix_socket":"None","user":"'susan'"}},{"function":"connect","module":"pymysql.connections","filename":"pymysql/connections.py","abs_path":"/home/susan_chen/.local/lib/python3.9/site-packages/pymysql/connections.py","lineno":711,"pre_context":["                # Keep original exception and traceback to investigate error.","                exc.original_exception = e","                exc.traceback = traceback.format_exc()","                if DEBUG:","                    print(exc.traceback)"],"context_line":"                raise exc","post_context":["","            # If e is neither DatabaseError or IOError, It's a bug.","            # But raising AssertionError hides original error.","            # So just reraise it.","            raise"],"in_app":false,"vars":{"exc":"OperationalError(2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")","kwargs":{},"self":"<pymysql.connections.Connection object at 0x7d23341a2940>","sock":"None"}}]},"mechanism":{"type":"flask","handled":false}}]},"extra":{"sys.argv":["/home/susan_chen/flask_e2e_project/app/app.py"]},"fingerprint":["{{ default }}"],"grouping_config":{"enhancements":"eJybzDRxc15qeXFJZU6qlZGBkbGugaGuoeEEAHJMCAM","id":"newstyle:2023-01-11"},"hashes":["4789f47aae85a45c13a8b5ec84189f1d","10e89a5fc907caa1f7ba6711ba25c367"],"ingest_path":[{"version":"23.11.2","public_key":"XE7QiyuNlja9PZ7I9qJlwQotzecWrUIN91BAO7Q5R38"}],"key_id":"3530147","level":"error","location":"app.py","logger":"","metadata":{"display_title_with_tree_label":false,"filename":"app.py","function":"sql","in_app_frame_mix":"mixed","type":"OperationalError","value":"(pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '504project.mysql.database.azure.com' (timed out)\")\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"},"modules":{"absl-py":"2.0.0","alembic":"1.12.0","anyio":"3.6.2","appdirs":"1.4.4","asgiref":"3.7.2","astroid":"3.0.1","asttokens":"2.4.1","astunparse":"1.6.3","attrs":"23.1.0","authlib":"1.2.1","autopep8":"1.5.5","azure-functions":"1.17.0","bleach":"6.1.0","blinker":"1.6.2","cachelib":"0.10.2","cachetools":"5.3.2","certifi":"2023.11.17","cffi":"1.16.0","charset-normalizer":"3.3.2","click":"8.1.7","cloudpickle":"3.0.0","contourpy":"1.1.1","crcmod":"1.7","cryptography":"41.0.7","cycler":"0.11.0","dbus-python":"1.2.16","decorator":"5.1.1","dill":"0.3.7","distlib":"0.3.7","django":"4.2.7","dnspython":"2.4.2","email-validator":"2.0.0.post1","exceptiongroup":"1.2.0","executing":"2.0.1","faker":"19.6.2","fastapi":"0.95.1","filelock":"3.13.1","flake8":"3.8.4","flasgger":"0.9.7.1","flask":"3.0.0","flask-pymongo":"2.3.0","flask-session":"0.5.0","flatbuffers":"23.5.26","fonttools":"4.42.1","gast":"0.5.4","gce-v2v":"0.0.0","git-lfs":"1.6","google-api-core":"2.14.0","google-api-python-client":"2.109.0","google-auth":"2.24.0","google-auth-httplib2":"0.1.1","google-auth-oauthlib":"1.1.0","google-cloud-appengine-logging":"1.3.2","google-cloud-audit-log":"0.2.5","google-cloud-bigquery":"3.13.0","google-cloud-core":"2.3.3","google-cloud-datastore":"2.18.0","google-cloud-language":"2.11.1","google-cloud-logging":"3.8.0","google-cloud-spanner":"3.40.1","google-cloud-storage":"2.13.0","google-cloud-translate":"3.12.1","google-cloud-videointelligence":"2.11.4","google-cloud-vision":"3.4.5","google-crc32c":"1.5.0","google-pasta":"0.2.0","google-resumable-media":"2.6.0","googleapis-common-protos":"1.61.0","greenlet":"2.0.2","grpc-google-iam-v1":"0.12.7","grpcio":"1.59.3","grpcio-status":"1.59.3","gunicorn":"20.1.0","h11":"0.14.0","h5py":"3.10.0","htmltools":"0.3.0","httpcore":"0.17.0","httplib2":"0.22.0","httptools":"0.5.0","httpx":"0.24.0","idna":"3.6","imageio":"2.32.0","importlib-metadata":"6.9.0","importlib-resources":"6.1.0","ipython":"8.18.1","isort":"5.12.0","itsdangerous":"2.1.2","jaraco.classes":"3.3.0","jedi":"0.17.0","jeepney":"0.8.0","jinja2":"3.1.2","joblib":"1.3.2","jsonschema":"4.20.0","jsonschema-specifications":"2023.11.2","keras":"2.15.0","keyring":"24.3.0","keyrings.google-artifactregistry-auth":"1.1.2","kiwisolver":"1.4.5","lazy-object-proxy":"1.6.0","lazy_loader":"0.3","libclang":"16.0.6","lime":"0.2.0.1","linkify-it-py":"2.0.2","llvmlite":"0.41.1","load-dotenv":"0.1.0","mako":"1.2.4","markdown":"3.5.1","markdown-it-py":"3.0.0","markupsafe":"2.1.3","matplotlib":"3.8.0","matplotlib-inline":"0.1.6","mccabe":"0.6.1","mdit-py-plugins":"0.4.0","mdurl":"0.1.2","mercurial":"5.6.1","mistune":"3.0.2","ml-dtypes":"0.2.0","more-itertools":"10.1.0","mypy":"1.7.1","mypy-extensions":"1.0.0","mysql-connector-python":"8.1.0","networkx":"3.2.1","numba":"0.58.1","numpy":"1.26.2","oauth2client":"4.1.3","oauthlib":"3.2.2","opt-einsum":"3.3.0","orjson":"3.8.10","packaging":"23.2","pandas":"2.0.3","parso":"0.8.3","pexpect":"4.9.0","pillow":"10.0.1","pip":"20.3.4","platformdirs":"4.0.0","pluggy":"1.3.0","prompt-toolkit":"3.0.41","proto-plus":"1.22.3","protobuf":"4.21.12","psycopg2":"2.9.9","ptyprocess":"0.7.0","pure-eval":"0.2.2","pyasn1":"0.5.1","pyasn1-modules":"0.3.0","pycodestyle":"2.6.0","pycparser":"2.21","pycurl":"7.43.0.6","pydantic":"1.10.7","pydocstyle":"6.3.0","pyflakes":"2.2.0","pygments":"2.17.2","pygobject":"3.38.0","pylint":"3.0.2","pyls-mypy":"0.1.8","pymongo":"4.6.1","pymysql":"1.1.0","pyparsing":"3.1.1","python-apt":"2.2.1","python-dateutil":"2.8.2","python-dotenv":"1.0.0","python-jsonrpc-server":"0.4.0","python-language-server":"0.35.1","python-multipart":"0.0.6","pytoolconfig":"1.2.6","pytz":"2023.3","pyyaml":"6.0.1","referencing":"0.31.1","requests":"2.31.0","requests-oauthlib":"1.3.1","rope":"1.11.0","rpds-py":"0.13.2","rsa":"4.9","scikit-image":"0.22.0","scikit-learn":"1.3.2","scipy":"1.11.3","secretstorage":"3.3.3","sentry-sdk":"1.38.0","setuptools":"69.0.2","shap":"0.43.0","shiny":"0.5.1","six":"1.16.0","slicer":"0.0.7","sniffio":"1.3.0","snowballstemmer":"2.2.0","sqlalchemy":"2.0.19","sqlparse":"0.4.4","stack-data":"0.6.3","starlette":"0.26.1","supervisor":"4.2.2","tablib":"3.5.0","tensorboard":"2.15.1","tensorboard-data-server":"0.7.2","tensorflow":"2.15.0","tensorflow-estimator":"2.15.0","tensorflow-io-gcs-filesystem":"0.34.0","termcolor":"2.4.0","threadpoolctl":"3.2.0","tifffile":"2023.9.26","toml":"0.10.2","tomli":"2.0.1","tomlkit":"0.12.3","tqdm":"4.66.1","traitlets":"5.14.0","typing_extensions":"4.8.0","tzdata":"2023.3","uc-micro-py":"1.0.2","ujson":"5.8.0","uritemplate":"4.1.1","urllib3":"2.1.0","uvicorn":"0.21.1","uvloop":"0.17.0","virtualenv":"20.25.0","watchfiles":"0.19.0","wcwidth":"0.2.12","webencodings":"0.5.1","websockets":"11.0.1","werkzeug":"3.0.1","wheel":"0.34.2","wrapt":"1.14.1","xgboost":"2.0.2","yapf":"0.40.2","zipp":"3.17.0"},"nodestore_insert":1702698161.48539,"received":1702698160.117517,"request":{"url":"http://127.0.0.1:5000/sql","method":"GET","headers":[["Accept","text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7"],["Accept-Encoding","gzip, deflate, br"],["Accept-Language","en-US,en;q=0.9"],["Cookie","[Filtered]"],["Host","127.0.0.1:5000"],["Referer","[Filtered]"],["Sec-Ch-Ua","\"Chromium\";v=\"118\", \"Google Chrome\";v=\"118\", \"Not=A?Brand\";v=\"99\""],["Sec-Ch-Ua-Mobile","?0"],["Sec-Ch-Ua-Platform","\"macOS\""],["Sec-Fetch-Dest","document"],["Sec-Fetch-Mode","navigate"],["Sec-Fetch-Site","same-origin"],["Sec-Fetch-User","?1"],["Upgrade-Insecure-Requests","1"],["User-Agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36"],["X-Forwarded-Host","5000-cs-1039191608401-default.cs-us-east1-vpcf.cloudshell.dev"]],"env":{"SERVER_NAME":"0.0.0.0","SERVER_PORT":"5000"}},"sdk":{"name":"sentry.python.django","version":"1.38.0","integrations":["argv","atexit","dedupe","django","excepthook","fastapi","flask","httpx","logging","modules","sqlalchemy","starlette","stdlib","threading"],"packages":[{"name":"pypi:sentry-sdk","version":"1.38.0"}]},"timestamp":1702698160.069426,"title":"OperationalError: (pymysql.err.OperationalError) (2003, \"Can't connect to MySQL server on '504project.mysql.databas...","transaction":"sql","transaction_info":{"source":"component"},"type":"error","version":"7"}